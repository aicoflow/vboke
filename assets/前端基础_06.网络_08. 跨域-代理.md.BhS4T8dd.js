import{_ as i,c as a,o as n,aM as t}from"./chunks/framework.ldyE1wya.js";const E=JSON.parse('{"title":"跨域-代理","description":"","frontmatter":{},"headers":[],"relativePath":"前端基础/06.网络/08. 跨域-代理.md","filePath":"前端基础/06.网络/08. 跨域-代理.md"}'),p={name:"前端基础/06.网络/08. 跨域-代理.md"};function e(l,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="跨域-代理" tabindex="-1">跨域-代理 <a class="header-anchor" href="#跨域-代理" aria-label="Permalink to &quot;跨域-代理&quot;">​</a></h1><p><strong>对于前端开发而言</strong>，大部分的跨域问题，都是通过代理解决的</p><p><strong>代理适用的场景是：生产环境不发生跨域，但开发环境发生跨域</strong></p><p>因此，只需要在开发环境使用代理解决跨域即可，这种代理又称之为开发代理</p><p><img src="http://mdrs.yuanjin.tech/img/20210916125008.png" alt="image-20210916125008693"></p><p>在实际开发中，只需要对开发服务器稍加配置即可完成</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vue 的开发服务器代理配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vue.config.js</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  devServer: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 配置开发服务器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    proxy: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 配置代理</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;/api&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 若请求路径以 /api 开头</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        target: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://dev.taobao.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 将其转发到 http://dev.taobao.com</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div>`,7)]))}const c=i(p,[["render",e]]);export{E as __pageData,c as default};
